
function attempt_verification:
    verify:
        assert 1 is 1
        assert 1 is not 2
    trigger:
        set {a} to 1
        assert {a} is 1

function input:
    trigger:
        set {a} to test_single(1)
        set {b} to test_double({a}, 5)
        assert {b} is 7

function test_single(thing):
    trigger:
        assert {thing} is 1
        return {thing} + 1

function test_double(thing, plus):
    trigger:
        assert {thing} is test_single(1)
        assert {thing} is 2
        return {thing} + {plus}

function reflection:
    trigger:
        set {array} to (1, 2, 3)
        set {var} to function "reflect_target(a, b, c)"
        run {var} with (1, 2, 3)
        run {var} with {array}
        set {var} to function "reflect_target"
        run {var}
        set {list} to a new list
        set {func} to function "reflect_target (obj)"
        run {func} with a new array of ({list})
        assert index 0 in {list} is 1
        set {func} to function "reflect_get"
        set {value} to result of {func}
        assert {value} is 2
        print "finished reflection test"

function reflect_get:
    trigger:
        return 2

function reflect_target:
    trigger:
        assert 1 is 1
        print "no arguments"

function reflect_target (a, b, c):
    trigger:
        assert {a} is 1
        assert {b} is 2
        print "with arguments"

function reflect_target (list):
    trigger:
        add 1 to {list}
        print "single argument"

function external:
    trigger:
        set {var} to external_target() from skript/lambda
        assert {var} is 2
        set {var} to external_target(6) from skript/lambda
        assert {var} is 6

function skript_default:
    trigger:
        set {var} to get_class("skript")
        assert {var} is not null
