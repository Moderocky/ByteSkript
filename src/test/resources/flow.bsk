
function if_flow:
    trigger:
        print "start if"
        if "hello" is a string:
            set {var} to true
            assert true
        else if false:
            set {var} to false
            assert false
        else:
            set {var} to false
            assert false
        assert {var} is true
        print "end if"

function while_flow:
    trigger:
        print "start while"
        set {a} to false
        set {b} to true
        while {b}:
            exit section
            print "blob"
            wait 3 seconds
            assert false
            print "boo"
        print "finish while"
        return "ended"

function test_run:
    trigger:
        print "start deferred"
        set {var} to a new runnable:
            assert 1 is 1
        run {var}
        run {var} in the background
        run defer({var})
        set {x} to 2
        set {thing} to a new runnable:
            assert {x} is 2
        set {x} to 4
        run {thing}
        run {thing} in the background
        assert {x} is 4
        set {method} to the function "reflective" with 1 arg
        run {method} with (2, 66) in the background
        print "end deferred"

function reflective (number):
    trigger:
        assert 2 is {number}

function defer (runnable):
    trigger:
        run {runnable}

function inline_headers:
    trigger:
        print "start inline"
        if true:
            assert true
            if false
            assert false
            print "w"
        print "end inline"
        if false
        print "3"
        print "4"

function closer: // to check the inlines closed in the previous function
    trigger:
        return null
