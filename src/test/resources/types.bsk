
template type Thing:
    function my_func:
        return: String
    function another_func:
        trigger:
            return 10

type Box:
    template: Thing
    function bonk:
        return: Boolean
        trigger:
            set {var} to my_func() from this object
            assert {var} is "hello": "Member-local function didn't return properly."
            return true
    function my_func:
        return: String
        trigger:
            return "hello"
    function func_with_args (blob):
        return: Integer
        trigger:
            return 208 + {blob}
    function toString:
        return: String
        trigger:
            return "Hello?"


function basic_use:
    trigger:
        set {thing} to a new Box
        assert {thing} exists: "Type creation failed."
        assert {thing} is a Box: "Type self-comparison failed."
        assert {thing} is a Thing: "Type template-comparison failed."
        assert "" + {thing} is "Hello?": "Type toString override failed."
        set {word} to my_func() from {thing}
        assert {word} is "hello": "Member function call failed."
        set {number} to func_with_args(3) from {thing}
        assert {number} is 211: "Member function call with args failed."
        set {boolean} to bonk() from {thing}
        assert {boolean} is true: "Member function didn't return correctly."
        assert another_func() from {thing} is 10: "Template default function didn't return correctly."
